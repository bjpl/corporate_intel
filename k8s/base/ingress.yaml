apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: corporate-intel-ingress
  labels:
    app: corporate-intel
  annotations:
    # Nginx Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate Limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "50"

    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://corporate-intel.example.com"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
      more_set_headers "Content-Security-Policy: default-src 'self'";

    # Client Body Size
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"

    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"

    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"

    # WAF (ModSecurity)
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"

    # Monitoring
    nginx.ingress.kubernetes.io/enable-opentracing: "true"

spec:
  tls:
  - hosts:
    - api.corporate-intel.example.com
    - corporate-intel.example.com
    secretName: corporate-intel-tls

  rules:
  - host: api.corporate-intel.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: corporate-intel-api
            port:
              number: 80

  - host: corporate-intel.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: corporate-intel-api
            port:
              number: 80

---
# Additional Ingress for Internal Metrics (not exposed externally)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: corporate-intel-metrics-ingress
  labels:
    app: corporate-intel
    component: metrics
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  rules:
  - host: metrics.corporate-intel.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: corporate-intel-api
            port:
              number: 9090

---
# Certificate for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: corporate-intel-tls
  labels:
    app: corporate-intel
spec:
  secretName: corporate-intel-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.corporate-intel.example.com
  - corporate-intel.example.com
  - "*.corporate-intel.example.com"

---
# ClusterIssuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@corporate-intel.example.com
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx
    - dns01:
        route53:
          region: us-east-1
          hostedZoneID: Z1234567890ABC
