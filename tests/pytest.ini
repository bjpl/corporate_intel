[pytest]
# Pytest configuration for Corporate Intel Platform tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.11

# Additional options
addopts =
    # Verbose output
    -v

    # Show extra test summary info
    -ra

    # Show local variables in tracebacks
    -l

    # Strict markers - fail on unknown markers
    --strict-markers

    # Coverage options
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-branch

    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning

    # Performance
    --durations=10

    # Output
    --tb=short
    --color=yes

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require database/external services)
    slow: Slow running tests
    auth: Authentication and authorization tests
    api: API endpoint tests
    database: Database-related tests
    security: Security-focused tests
    performance: Performance and load tests
    smoke: Smoke tests for critical functionality
    regression: Regression tests

# Coverage settings
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = htmlcov

# Async settings
asyncio_mode = auto

# Log settings
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(filename)s:%(lineno)d] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings
timeout = 300
timeout_method = thread

# Display settings
console_output_style = progress

# Filterwarnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning:passlib.*
