groups:
  - name: api_performance_recording_rules
    interval: 30s
    rules:
      # Request rate aggregations
      - record: job:http_requests:rate5m
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api"}[5m]))
          by (job, method, status)

      - record: job:http_requests:rate1h
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api"}[1h]))
          by (job, method, status)

      # Error rate calculations
      - record: job:http_requests:error_rate5m
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api",status=~"5.."}[5m]))
          /
          sum(rate(http_requests_total{job="corporate-intel-api"}[5m]))

      - record: job:http_requests:error_rate1h
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api",status=~"5.."}[1h]))
          /
          sum(rate(http_requests_total{job="corporate-intel-api"}[1h]))

      # Latency percentiles
      - record: job:http_request_duration:p50
        expr: |
          histogram_quantile(0.50,
            sum(rate(http_request_duration_seconds_bucket{job="corporate-intel-api"}[5m]))
            by (job, le)
          )

      - record: job:http_request_duration:p95
        expr: |
          histogram_quantile(0.95,
            sum(rate(http_request_duration_seconds_bucket{job="corporate-intel-api"}[5m]))
            by (job, le)
          )

      - record: job:http_request_duration:p99
        expr: |
          histogram_quantile(0.99,
            sum(rate(http_request_duration_seconds_bucket{job="corporate-intel-api"}[5m]))
            by (job, le)
          )

      # Throughput calculations
      - record: job:http_requests:throughput
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api"}[5m]))
          by (job)

  - name: database_performance_recording_rules
    interval: 30s
    rules:
      # Connection pool metrics
      - record: job:db_connections:usage_ratio
        expr: |
          sum(pg_stat_database_numbackends)
          /
          sum(pg_settings_max_connections)

      - record: job:db_connections:active
        expr: |
          sum(pg_stat_activity_count{state="active"})

      - record: job:db_connections:idle
        expr: |
          sum(pg_stat_activity_count{state="idle"})

      # Transaction metrics
      - record: job:db_transactions:rate5m
        expr: |
          sum(rate(pg_stat_database_xact_commit[5m]))
          +
          sum(rate(pg_stat_database_xact_rollback[5m]))

      - record: job:db_transactions:commit_ratio
        expr: |
          sum(rate(pg_stat_database_xact_commit[5m]))
          /
          (
            sum(rate(pg_stat_database_xact_commit[5m]))
            +
            sum(rate(pg_stat_database_xact_rollback[5m]))
          )

      # Query performance
      - record: job:db_query_duration:p95
        expr: |
          histogram_quantile(0.95,
            sum(rate(pg_stat_statements_mean_time_seconds_bucket[5m]))
            by (le)
          )

  - name: cache_performance_recording_rules
    interval: 30s
    rules:
      # Redis memory metrics
      - record: job:redis_memory:usage_ratio
        expr: |
          sum(redis_memory_used_bytes)
          /
          sum(redis_memory_max_bytes)

      - record: job:redis_memory:fragmentation_ratio
        expr: |
          sum(redis_mem_fragmentation_ratio)

      # Cache hit rate
      - record: job:redis:hit_rate
        expr: |
          sum(rate(redis_keyspace_hits_total[5m]))
          /
          (
            sum(rate(redis_keyspace_hits_total[5m]))
            +
            sum(rate(redis_keyspace_misses_total[5m]))
          )

      # Command rate
      - record: job:redis_commands:rate5m
        expr: |
          sum(rate(redis_commands_processed_total[5m]))
          by (cmd)

  - name: queue_performance_recording_rules
    interval: 30s
    rules:
      # RabbitMQ queue metrics
      - record: job:rabbitmq_queue:total_messages
        expr: |
          sum(rabbitmq_queue_messages)
          by (queue)

      - record: job:rabbitmq_queue:ready_messages
        expr: |
          sum(rabbitmq_queue_messages_ready)
          by (queue)

      - record: job:rabbitmq_queue:unacked_messages
        expr: |
          sum(rabbitmq_queue_messages_unacknowledged)
          by (queue)

      # Message processing rate
      - record: job:rabbitmq_queue:publish_rate
        expr: |
          sum(rate(rabbitmq_queue_messages_published_total[5m]))
          by (queue)

      - record: job:rabbitmq_queue:consume_rate
        expr: |
          sum(rate(rabbitmq_queue_messages_delivered_total[5m]))
          by (queue)

      # Consumer metrics
      - record: job:rabbitmq_queue:consumers
        expr: |
          sum(rabbitmq_queue_consumers)
          by (queue)

      - record: job:rabbitmq_queue:messages_per_consumer
        expr: |
          sum(rabbitmq_queue_messages_ready)
          by (queue)
          /
          sum(rabbitmq_queue_consumers)
          by (queue)

  - name: celery_task_recording_rules
    interval: 30s
    rules:
      # Task execution metrics
      - record: job:celery_tasks:rate5m
        expr: |
          sum(rate(celery_task_total[5m]))
          by (task_name, state)

      - record: job:celery_tasks:success_rate
        expr: |
          sum(rate(celery_task_succeeded_total[5m]))
          /
          sum(rate(celery_task_total[5m]))

      - record: job:celery_tasks:failure_rate
        expr: |
          sum(rate(celery_task_failed_total[5m]))
          /
          sum(rate(celery_task_total[5m]))

      # Task duration
      - record: job:celery_task_duration:p95
        expr: |
          histogram_quantile(0.95,
            sum(rate(celery_task_runtime_seconds_bucket[5m]))
            by (task_name, le)
          )

      - record: job:celery_task_duration:avg
        expr: |
          avg(celery_task_runtime_seconds_sum / celery_task_runtime_seconds_count)
          by (task_name)

  - name: business_kpi_recording_rules
    interval: 60s
    rules:
      # User activity metrics
      - record: business:user_logins:rate1h
        expr: |
          sum(rate(http_requests_total{path="/api/v1/auth/login",status="200"}[1h]))

      - record: business:api_calls:rate1h
        expr: |
          sum(rate(http_requests_total{job="corporate-intel-api"}[1h]))
          by (path)

      # Data processing metrics
      - record: business:data_ingestion:rate1h
        expr: |
          sum(rate(celery_task_total{task_name=~".*ingest.*"}[1h]))

      - record: business:report_generation:rate1h
        expr: |
          sum(rate(celery_task_total{task_name=~".*report.*"}[1h]))

      # Revenue/usage metrics (example)
      - record: business:active_users:daily
        expr: |
          count(count_over_time(http_requests_total{path=~"/api/v1/.*"}[24h]))
          by (user_id)

  - name: resource_utilization_recording_rules
    interval: 30s
    rules:
      # CPU utilization
      - record: node:cpu_utilization:avg5m
        expr: |
          1 - avg(rate(node_cpu_seconds_total{mode="idle"}[5m]))
          by (instance)

      # Memory utilization
      - record: node:memory_utilization:ratio
        expr: |
          1 - (
            node_memory_MemAvailable_bytes
            /
            node_memory_MemTotal_bytes
          )

      # Disk I/O
      - record: node:disk_io:read_bytes_rate
        expr: |
          sum(rate(node_disk_read_bytes_total[5m]))
          by (instance, device)

      - record: node:disk_io:write_bytes_rate
        expr: |
          sum(rate(node_disk_written_bytes_total[5m]))
          by (instance, device)

      # Network I/O
      - record: node:network_io:receive_bytes_rate
        expr: |
          sum(rate(node_network_receive_bytes_total[5m]))
          by (instance, device)

      - record: node:network_io:transmit_bytes_rate
        expr: |
          sum(rate(node_network_transmit_bytes_total[5m]))
          by (instance, device)
