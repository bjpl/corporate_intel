[project]
name = "corporate-intel"
version = "0.1.0"
description = "Production-hardened corporate intelligence platform for EdTech analysis"
authors = [{name = "Brandon Lambert", email = "brandon.lambert87@gmail.com"}]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

dependencies = [
    # Core Framework (capped to prevent breaking changes)
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",

    # Database
    "sqlalchemy>=2.0.0,<3.0.0",
    "asyncpg>=0.29.0,<1.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
    "alembic>=1.12.0,<2.0.0",
    "pgvector>=0.2.4,<1.0.0",

    # Data Processing
    "pandas>=2.1.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "pandera>=0.17.0,<1.0.0",
    "great-expectations>=0.18.0,<1.0.0",
    "dbt-core>=1.7.0,<2.0.0",
    "dbt-postgres>=1.7.0,<2.0.0",

    # Orchestration (Prefect v2 only - prevents v3+ auto-upgrade that causes import errors)
    "prefect>=2.14.0,<3.0.0",
    "prefect-dask>=0.2.5,<1.0.0",
    "ray[default]>=2.8.0,<3.0.0",

    # Caching & Storage
    "redis>=5.0.0,<6.0.0",
    "aiocache[redis]>=0.12.0,<1.0.0",
    "minio>=7.2.0,<8.0.0",

    # Observability
    "opentelemetry-api>=1.21.0,<2.0.0",
    "opentelemetry-sdk>=1.21.0,<2.0.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0,<1.0.0",
    "prometheus-client>=0.19.0,<1.0.0",
    "loguru>=0.7.0,<1.0.0",
    "sentry-sdk[fastapi]>=1.39.0,<2.0.0",

    # Document Processing
    "pypdf>=3.17.0,<4.0.0",
    "pdfplumber>=0.10.0,<1.0.0",
    "python-docx>=1.1.0,<2.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",

    # Financial Data
    "yfinance>=0.2.33,<1.0.0",
    "alpha-vantage>=2.3.1,<3.0.0",
    "sec-edgar-api>=1.0.0,<2.0.0",

    # Visualization
    "plotly>=5.18.0,<6.0.0",
    "dash>=2.14.0,<3.0.0",

    # Testing
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "httpx>=0.25.0,<1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.12.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "ipython>=8.18.0",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C4", "ISC", "PIE", "PT", "RET", "SIM", "TID"]
ignore = ["E501", "S101"]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

# Per-module options for gradual adoption
[[tool.mypy.overrides]]
module = [
    "tests.*",
    "*.migrations.*"
]
disallow_untyped_defs = false
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = [
    "dash.*",
    "plotly.*",
    "prefect.*",
    "ray.*",
    "great_expectations.*",
    "minio.*",
    "sec_edgar_api.*"
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-branch",
    "--cov-fail-under=80",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/alembic/versions/*",
    "*/migrations/*",
    "*/.venv/*",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 80.0
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "except ImportError:",
]

[tool.coverage.html]
directory = "htmlcov"
title = "Corporate Intelligence Platform - Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["src"]
known_third_party = [
    "fastapi",
    "pydantic",
    "sqlalchemy",
    "pandas",
    "numpy",
]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/alembic/versions/*"]

[tool.bandit]
exclude_dirs = ["tests", "test_*.py", ".venv", "venv"]
skips = ["B101", "B601"]
# B101: assert_used - allow asserts in tests
# B601: paramiko_calls - we don't use paramiko
